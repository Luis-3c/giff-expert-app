{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","prevData","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","c","ReactDOM","render","document","getElementById"],"mappings":"mMAkCeA,EA/BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAgBvC,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC3CN,EAAc,MAKlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAjBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAUH,GAD9C,+DAEDI,MAAMF,GAFL,cAEbG,EAFa,gBAGEA,EAAIC,OAHN,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCWLO,EATK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC7B,OACC,sBAAKc,UAAU,OAAf,UACC,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCqBQO,EAtBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFN,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVCC,qBAAW,WACRxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDXwBK,CAAa1B,GAAhCa,EAHkB,EAGvBN,KAAaa,EAHU,EAGVA,QAEpB,OACI,qCACI,mCAAMpB,EAAN,OACCoB,GAAW,mBAAGJ,UAAU,6CAAb,qBACZ,qBAAKA,UAAU,kDAAf,SACSH,EAAOJ,KAAI,SAACC,GAAD,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEatBgB,EA1BM,WAAO,IAAD,EAEazC,mBAAS,CAAC,cAFvB,mBAEhB0C,EAFgB,KAEJ3C,EAFI,KAKvB,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAGA,6BAEQ2C,EAAWnB,KAAI,SAAAoB,GAAC,OACZ,cAAC,EAAD,CAEI7B,SAAU6B,GADLA,Y,MCd7BC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.d4b4e7a9.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ( {setCategories} ) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategories( prevData => [inputValue, ...prevData]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n            type=\"text\" \n            value={inputValue}\n            onChange={ handleInputChange }\n            /> \n        </form>\n    );\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;","export const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=Zg7P7B0e5RNCbXVNuvCf3J0fRw8E9zuY`;\n    const res = await fetch(url);\n    const {data} = await res.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}\n","import React from 'react';\n\nconst GifGridItem = ({ title, url }) => {\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<img src={url} alt={title} />\n\t\t\t<p>{title}</p>\n\t\t</div>\n\t);\n};\n\nexport default GifGridItem;\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem';\n/* import { getGifs } from './helpers/getGifs'; */\n\nconst GifGrid = ( {category} ) => {\n\n    //const [images, setImages] = useState([]);\n    const {data:images, loading} = useFetchGifs(category);\n\n    return (\n        <>\n            <h3> {category} </h3>\n            {loading && <p className=\"card-grid animate__animated animate__flash\">Loading</p> }\n            <div className=\"card-grid animate__animated animate__fadeInLeft\">\n                    {images.map((img)=>(\n                        <GifGridItem \n                            key={img.id}\n                            {...img}\n                        />\n                    ))}\n            </div>\n        </>\n       \n    );\n};\n\nexport default GifGrid;","import { useState, useEffect } from 'react';\nimport { getGifs } from '../components/helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n     useEffect( () => {\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            })\n    }, [category])\n\n    return state; //{data: [], loading: true}\n}","import React, {useState} from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n\n    return (\n        <>\n        <h2>GifExpertApp</h2>\n        <AddCategory setCategories={setCategories}/>\n        <hr/>\n\n        \n        <ol>\n            {\n                categories.map(c => ( \n                    <GifGrid \n                        key={c}\n                        category={c}\n                    />\n            ))\n            }\n        </ol>\n        </>\n    );\n};\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}